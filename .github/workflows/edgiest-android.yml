name: Rolling android release

on:
  # Enable manual run
  workflow_dispatch:
  push:
    tags:
      - 'v*.*.*-edgiest'
    paths:
      - '.github/workflows/edgiest-android.yml'

jobs:
  build-foss-apk:
    name: Build FOSS APK
    runs-on: ubuntu-latest
    permissions:
      contents: write
    timeout-minutes: 30
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install apt dependencies
        uses: awalsh128/cache-apt-pkgs-action@latest
        with:
          packages: libgtk-3-dev libx11-dev pkg-config cmake ninja-build libblkid-dev libsecret-1-dev libjsoncpp-dev ghostscript libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev libunwind-dev webkit2gtk-4.1-dev
          version: 1.0
          execute_install_scripts: true

      - name: Setup cache
        uses: actions/cache@v4
        with:
          path: |
            build
          key: ${{ runner.OS }}-saberfoss-${{ hashFiles('**/pubspec.yaml') }}-${{ hashFiles('**/*.dart') }}
          restore-keys: |
            ${{ runner.OS }}-saberfoss-

      - name: Remove proprietary dependencies
        run: ./patches/remove_proprietary_dependencies.sh
      
      - name: Setup keystore
        run: |
          echo "${{ secrets.SIGNING_KEY }}" | base64 -d > android/android.keystore
          echo "storePassword=${{ secrets.KEY_STORE_PASSWORD }}" > android/key.properties
          echo "keyPassword=${{ secrets.KEY_PASSWORD }}" >> android/key.properties
          echo "keyAlias=${{ secrets.ALIAS }}" >> android/key.properties
          echo "storeFile=../android.keystore" >> android/key.properties

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          cache: true
          cache-key: 'flutter-:os:-:channel:-:version:-:arch:'

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'microsoft'
          java-version: '21'

      - name: Disable Flutter CLI animations
        run: flutter config --no-cli-animations

      - name: Get dependencies
        run: flutter pub get

      - name: Build apk
        run: |
          flutter build apk \
            --dart-define=DIRTY=$DIRTY
        env:
          DIRTY: ${{ !startsWith(github.ref, 'refs/tags/') }}

      - name: Rename apk
        id: rename_apk
        run: |
          buildName=$(grep -oP "(?<=buildName = ').*(?=')" lib/data/version.dart)-edgiest
          apkName="Saber_FOSS_v${buildName}.apk"
          echo "apkName=$apkName" >> $GITHUB_OUTPUT

          mkdir -p output
          mv build/app/outputs/flutter-apk/app-release.apk output/$apkName

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: Saber-Android-FOSS
          path: output/${{ steps.rename_apk.outputs.apkName }}

      - name: Upload to GitHub release
        uses: svenstaro/upload-release-action@v2
        if: ${{ startsWith(github.ref, 'refs/tags/') }}
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          release_name: ${{ github.ref_name }}
          body: ${{ github.event.head_commit.message }}
          file: output/${{ steps.rename_apk.outputs.apkName }}
          overwrite: true
